rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Video ratings - separate collection for ratings
    match /video_ratings/{ratingId} {
      // Users can read all ratings (for stats)
      allow read: if true;
      
      // Users can only create/update/delete their own ratings
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.userId
        && validateRating(request.resource.data);
      
      allow update: if request.auth != null 
        && request.auth.uid == resource.data.userId
        && request.auth.uid == request.resource.data.userId
        && validateRating(request.resource.data);
      
      allow delete: if request.auth != null 
        && request.auth.uid == resource.data.userId;
    }
    
    // Video stats - separate collection for aggregated stats
    match /video_stats/{videoId} {
      // Anyone can read stats
      allow read: if true;
      
      // Only backend can write stats (via Cloud Functions)
      allow write: if false;
    }
    
    // Default fallback for other collections
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
  
  // Validation function for rating data
  function validateRating(data) {
    return data.keys().hasAll(['userId', 'videoId', 'rating', 'createdAt', 'updatedAt'])
      && data.userId is string
      && data.videoId is string
      && data.rating is int
      && data.rating >= 1
      && data.rating <= 5
      && data.createdAt is timestamp
      && data.updatedAt is timestamp;
  }
}